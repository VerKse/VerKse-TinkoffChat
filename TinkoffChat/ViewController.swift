//
//  ViewController.swift
//  TinkoffChat
//
//  Created by Vera on 16.02.2020.
//  Copyright ¬© 2020 Vera. All rights reserved.
//

import UIKit


class ViewController: UIViewController {
    
    
    //MARK: Properties
    @IBOutlet weak var avatarButton: UIButton!
    @IBOutlet weak var avatarImg: UIImageView!
    @IBOutlet weak var nameLable: UILabel!
    @IBOutlet weak var aboutText: UITextView!
    @IBOutlet weak var editButton: UIButton!
    
    

    // init –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–≤–µ—Å—Ç–∏ frame –∫–Ω–æ–ø–∫–∏ ¬´—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å¬ª, —Ç–∞–∫ –∫–∞–∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –µ—â—ë –Ω–µ –ø—Ä–æ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã
    
    override func viewDidLoad() {
        
        super.viewDidLoad()
        let margins = view.layoutMarginsGuide
        
        avatarButton.backgroundColor = UIColor(red:0.25, green:0.47, blue:0.94, alpha:1.0)
        avatarButton.layer.cornerRadius = 20
        avatarButton.setTitle("", for: .normal)
        avatarButton.imageEdgeInsets = UIEdgeInsets(top:10, left:10, bottom:10, right:10)
        avatarButton.trailingAnchor.constraint(equalTo: avatarImg.trailingAnchor).isActive = true
        avatarButton.bottomAnchor.constraint(equalTo: avatarImg.bottomAnchor).isActive = true
        view.bringSubviewToFront(avatarButton)
            
        avatarImg.layer.cornerRadius = 20
        avatarImg.leadingAnchor.constraint(equalTo: margins.leadingAnchor).isActive = true
        avatarImg.trailingAnchor.constraint(equalTo: margins.trailingAnchor).isActive = true
        avatarImg.heightAnchor.constraint(equalTo: avatarImg.widthAnchor).isActive = true
        avatarImg.image = UIImage.init(named: "placeholder-user.png")
        
        nameLable.text = "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –§—ë–¥–æ—Ä–æ–≤"
        nameLable.leadingAnchor.constraint(equalTo: margins.leadingAnchor).isActive = true
        nameLable.trailingAnchor.constraint(equalTo: margins.trailingAnchor).isActive = true
        
        aboutText.text = "\u{1F496} –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥ iOS \n\u{1F496} —É–±–∏—Ä–∞—Ç—å –≤–∞—Ä–Ω–∏–Ω–≥–∏ \n\u{1F496} –≤–µ—Ä—Å—Ç–∞—Ç—å –≤ storyboard'–∞—Ö\n\u{1F496} —É–±–∏—Ä–∞—Ç—å –≤–∞—Ä–Ω–∏–Ω–≥–∏ \n\u{1F496} –µ—â—ë —Ä–∞–∑ —É–±–∏—Ä–∞—Ç—å –≤–∞—Ä–Ω–∏–Ω–≥–∏\nüöÄ  \nüê∂üêÆ \nü•≥ ü•¥ ü•∫"
        nameLable.font = UIFont.boldSystemFont(ofSize: 30)
        aboutText.font = UIFont.systemFont(ofSize: 18)
        aboutText.isScrollEnabled = true
        aboutText.isEditable = false
        aboutText.leadingAnchor.constraint(equalTo: margins.leadingAnchor).isActive = true
        aboutText.trailingAnchor.constraint(equalTo: margins.trailingAnchor).isActive = true
        
        editButton.backgroundColor = UIColor.white
        editButton.layer.cornerRadius = 15
        editButton.layer.borderWidth = 1
        editButton.layer.borderColor = UIColor.black.cgColor
        editButton.setTitleColor(UIColor.black, for: .normal)
        editButton.titleEdgeInsets = UIEdgeInsets(top: 10,left: 10,bottom: 10,right: 10)
        editButton.setTitleColor(.black, for: .normal)
        editButton.setTitle("—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", for: .normal)
        editButton.widthAnchor.constraint(equalTo: avatarImg.widthAnchor).isActive = true
        
        print("üåö –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å.frame.viewDidLoad:")
        print(editButton.frame)
        
    }

    
    //MARK: Actions
    @IBAction func avatarButton(_ sender: Any) {
        print(" üê≤ –í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è")
        
        let imagePicker = UIImagePickerController()

        let actionSheet = UIAlertController(title: "", message: "–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è", preferredStyle: UIAlertController.Style.actionSheet)
        
        let cameraAction = UIAlertAction(title: "–í—ã–±—Ä–∞—Ç—å –∏–∑ –≥–∞–ª–µ—Ä–µ–∏", style: UIAlertAction.Style.default, handler: { (action:UIAlertAction) in
            imagePicker.sourceType = .photoLibrary
            self.present(actionSheet, animated: true, completion: nil)
        })
        
        let galleryAction = UIAlertAction(title: "–°–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ", style: UIAlertAction.Style.default, handler: { (action:UIAlertAction) in
            imagePicker.sourceType = .camera
            self.present(imagePicker, animated: true, completion: nil)
        })
        
        let closeAction = UIAlertAction(title: "–ó–∞–∫—Ä—ã—Ç—å", style: UIAlertAction.Style.cancel){ (Action) -> Void in }
        
        if UIImagePickerController.isSourceTypeAvailable(UIImagePickerController.SourceType.camera) {
            actionSheet.addAction(cameraAction)
        }
        
        if UIImagePickerController.isSourceTypeAvailable(UIImagePickerController.SourceType.photoLibrary) {
            actionSheet.addAction(galleryAction)
        }
        
        actionSheet.addAction(cameraAction)
        //actionSheet.addAction(galleryAction)
        actionSheet.addAction(closeAction)
        
        present(actionSheet, animated: true, completion: nil)
    }
    
    @IBAction func editButton(_ sender: Any) {
        print(" üê≤ –†–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å")
    }

    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        if (ProcessInfo.processInfo.environment["UIVC_LIFESYCLE_LOGS"] == "consolePrint") {
            print("Application moved from DISAPPEARED/DISAPPEARING to APPEARING : viewWillAppear")
        }
    }
    
    override func viewWillLayoutSubviews() {
        super.viewWillLayoutSubviews()
        if (ProcessInfo.processInfo.environment["UIVC_LIFESYCLE_LOGS"] == "consolePrint") {
            print("Application is about to layout its subviews: viewWillLayoutSubviews")
        }
    }
    
    override func viewDidLayoutSubviews() {
        super.viewDidLayoutSubviews()
        if (ProcessInfo.processInfo.environment["UIVC$_LIFESYCLE_LOGS"] == "consolePrint") {
            print("Application has just laid out its subviews: viewDidLayoutSubviews")
        }
    }
    
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        if (ProcessInfo.processInfo.environment["UIVC_LIFESYCLE_LOGS"] == "consolePrint") {
            print("Application moved from APPEARING to APPEARED: viewDidAppear")
        }
        
        //frame –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è, –ø–æ—Ç–æ–º—É —á—Ç–æ –≤ .storyboard —Ñ–∞–π–ª–µ –≤—ã–±—Ä–∞–Ω –¥–µ–≤–∞–π—Å iPhoneSE, –∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∑–∞–ø—É—Å–∫–∞–µ–º–æ–≥–æ —Å–∏–º—É–ª—è—Ç–æ—Ä–∞ –≤—ã–±—Ä–∞–Ω iPhone8Plus -- —Ä–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–∞ —ç—Ç–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ —Ä–∞–∑–ª–∏—á–∞—é—Ç—Å—è, –∞ –∫–æ–Ω—Å—Ç–µ—Ä–π–Ω—Ç—ã –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ:
        //  –Ω–∞ X –∏ Y  (–≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏),
        //  EditButton.bottom = Safe Area.bottom - 10,
        //  width –æ—Ç leadingAnchor –∏ trailinAnchor
        print("üåö –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å.frame.viewDidAppear:")
        print(editButton.frame)
    }
    
    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        if (ProcessInfo.processInfo.environment["UIVC_LIFESYCLE_LOGS"] == "consolePrint") {
            print("Application moved from APPEARED/APPEARING to DISAPPEARING: viewWillDisappear")
        }
    }
    
    override func viewDidDisappear(_ animated: Bool) {
        super.viewDidDisappear(animated)
        if (ProcessInfo.processInfo.environment["UIVC_LIFESYCLE_LOGS"] == "consolePrint") {
            print("Application moved from DISAPPEARING to DISAPPEAR: viewDidDisappear")
        }
    }

}
